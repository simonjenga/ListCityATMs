<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"       
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"       
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired,
        as well as JSR 250's @PostConstruct, @PreDestroy and @Resource (if available) 
        and JPA's @PersistenceContext and @PersistenceUnit (if available).
    -->
    <context:annotation-config />

    <!-- Scan the classpath for annotated components that will be auto-registered as Spring beans.
        By default, Spring-provided stereotypes: @Component, @Repository, @Service, and @Controller will be detected.
    -->
    <context:component-scan base-package="com.city.atm" annotation-config="true" />

    <!-- <context:property-placeholder location="classpath:application.properties" />  -->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
        p:driverClassName="com.mysql.jdbc.Driver" p:url="jdbc:mysql://localhost:3306/companyrestservice"
        p:username="root" p:password="root">
    </bean>

    <!-- PERSISTENCE SUPPORT (JPA , Hibernate ,IBatis etc) -->
    <bean id="jpaProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.query.substitutions">true 'T', false 'F'</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.c3p0.minPoolSize">18</prop>
                <prop key="hibernate.c3p0.maxPoolSize">72</prop>
                <prop key="hibernate.c3p0.timeout">900</prop>
                <prop key="hibernate.c3p0.max_statement">500</prop>
                <prop key="hibernate.c3p0.testConnectionOnCheckout">false</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <!-- <prop key="hibernate.cache.region_prefix"></prop> -->
            </props>
        </property>
        <property name="ignoreResourceNotFound" value="false" />
    </bean>

    <!-- Define a bean named 'entityManagerFactory' that configures a test SessionFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource" p:jpaProperties-ref="jpaProperties"
        p:persistenceUnitName="ATMRestService" p:packagesToScan="com/city/**/model">
        <property name="jpaVendorAdapter">
            <!-- Implementation for Hibernate EntityManager -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />  
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory" p:dataSource-ref="dataSource" />

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Bean post-processor that automatically applies persistence exception translation to any
         bean marked with Spring's {@code @Repository} annotation -->
    <bean id="persistenceExceptionTranslationPostProcessor"
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>